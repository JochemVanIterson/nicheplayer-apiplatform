version: "3.4"

services:
  php:
    build:
      context: ./api
      target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  admin:
    build:
      context: ./admin
      target: api_platform_admin_prod
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy

  frontend:
    build:
      context: ./frontend
      target: api_platform_frontend_prod

  caddy:
    build:
      context: api/
      target: api_platform_caddy
    depends_on:
      - php
      - admin
      - frontend
    environment:
      ADMIN_UPSTREAM: admin:3000
      FRONTEND_UPSTREAM: frontend:8080
      SERVER_NAME: ${SERVER_NAME:-:80, caddy:80, mbp.audioware.nl:80, localhost:80, -:443, caddy:443, mbp.audioware.nl:443, localhost:443, caddy, mbp.audioware.nl, localhost}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp

  database:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=***REMOVED***
      - MYSQL_DATABASE=api
      - MYSQL_PASSWORD=***REMOVED***
      - MYSQL_USER=api-platform
    volumes:
      - db_data:/var/lib/mysql:rw
      # - ./api/docker/db/mysql:/var/lib/mysql:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
  phpmyadmin:
    depends_on:
      - database
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8081:80'
    environment:
      PMA_HOST: database
      MYSQL_ROOT_PASSWORD: ***REMOVED***
volumes:
  php_socket:
  db_data:
  caddy_data:
  caddy_config:
